;;(define-c-struct linenoiseCompletions
;;					  ;;predicate: linenoiseCompletions?
;;					(size_t len cvec-length)
;;					((array string) cvec cvec-ref)
;;)
					  

;;;;(define-c-struct wordexp_t
;;;;  constructor: make_wordexp
;;;;  finalizer: delete_wordexp
;;;;  
;;;;  ((maybe-null array string) we_wordv get-wordexp  set-wordexp!) 
;;;;  ((maybe-null array string) we_wordv get-word-count  set-word-count!)
;;;;)


;;; (define-c-struct stat
;;; 					  //constructor: make_file_stat
;;; 					  finalizer: delete_file_stat

;;; 					  (unsigned-long st_dev scm-get-stat-dev scm-set-stat-dev!) ;;/* ID of device containing file */
;;; 					  (unsigned-long st_ino scm-get-stat-ino scm-set-stat-ino!) ;;/* inode number */
;;; 					  (unsigned-short st_mode scm-get-stat-mode scm-set-stat-mode!) ;;/* protection */
;;; 					  (unsigned-long st_nlink scm-get-stat-nlink scm-set-stat-nlink!) ;;/* number of hard links */
;;; 					  (unsigned-short st_uid scm-get-stat-uid scm-set-stat-uid!) ;;/* user ID of owner */
;;; 					  (unsigned-short st_gid scm-get-stat-gid scm-set-stat-gid!) ;;/* group ID of owner */
;;; 					  (unsigned-long st_rdev scm-get-stat-rdev scm-set-stat-rdev!) ;;/* device ID (if special file) */
;;; 					  (unsigned-long st_size scm-get-stat-size scm-set-stat-size!) ;;/* total size, in bytes */
;;; 					  (unsigned-long st_blksize scm-get-stat-blksize scm-set-stat-blksize!) ;;/* blocksize for file system I/O */
;;; 					  (unsigned-long st_blocks scm-get-stat-blocks scm-set-stat-blocks!) ;;/* number of 512B blocks allocated */
;;; 					  (unsigned-long st_atime scm-get-stat-atime scm-set-stat-atime!) ;;/* time of last access */
;;; 					  (unsigned-long st_mtime scm-get-stat-mtime scm-set-stat-mtime!) ;;/* time of last modification */
;;; 					  (unsigned-long st_ctime scm-get-stat-ctime scm-set-stat-ctime!) ;;/* time of last status change */
;;; )

(c-include "external-support.h")
(c-system-include "chibi/eval.h")
(c-system-include "wordexp.h")
(c-system-include "readline/readline.h")
(c-system-include "readline/history.h")

(c-system-include "sys/types.h")
(c-system-include "sys/stat.h")
(c-system-include "unistd.h")
(c-system-include "stdlib.h")







;; (igor-read-line isfile inport prompt histfile)
(define-c (maybe-null free string) 
  (igor-read-line "igor_read_line") 
  (boolean 
	input-port 
	(maybe-null string) 
	(maybe-null string)))

;; (igor-get-command-line isfile inport prompt cprompt rprompt histfile)
(define-c (maybe-null free string) 
  (igor-get-command-line "igor_get_commandline") 
  (boolean 
	input-port 
	(maybe-null string) 
	(maybe-null string) 
	(maybe-null string) 
	(maybe-null string)))

;;(define-c (maybe-null stat) (make-file-stat "make_file_stat") (void))
;;(define-c void (delete-file-stat "delete_file_stat") (stat))
;;(define-c (maybe-null free stat) (scm-file-stat "scm_file_stat") (string))

(define-c (unsigned-long) (get-stat-dev "get_stat_dev") (string))
(define-c (unsigned-long) (get-stat-ino  "get_stat_ino") (string))
(define-c (unsigned-short) (get-stat-mode  "get_stat_mode") (string))
(define-c (unsigned-long) (get-stat-nlink  "get_stat_nlink") (string))
(define-c (unsigned-short) (get-stat-uid  "get_stat_uid") (string))
(define-c (unsigned-short) (get-stat-gid  "get_stat_gid") (string))
(define-c (unsigned-long) (get-stat-rdev  "get_stat_rdev") (string))
(define-c (unsigned-long) (get-stat-size  "get_stat_size") (string))
(define-c (unsigned-long) (get-stat-blksize  "get_stat_blksize") (string))
(define-c (unsigned-long) (get-stat-blocks  "get_stat_blocks") (string))
(define-c (unsigned-long) (get-stat-atime  "get_stat_atime") (string))
(define-c (unsigned-long) (get-stat-mtime  "get_stat_mtime") (string))
(define-c (unsigned-long) (get-stat-ctime  "get_stat_ctime") (string))

;;(define-c int (system "system") (string))

(define-c (sexp) (word-expand "sexp_wordexp") (string))
;;(define-c (sexp) (word-expand "sexp_wordexp_ext") (string))
(define-c (maybe-null free array string null) (we-word-expand "wordexp_string_array") (string))
(define-c (void)  (delete-string-array "delete_string_array") ((array string)) )

(define-c string (get-env "getenv") (string))
(define-c int (set-env "setenv") (string string int))
(define-c int (unset-env "unsetenv") (string))
					  
;;(define-c sexp (argv-to-list "argv_to_list") (sexp (array string) int))

;;(define-c string (term-read "linenoise") ((const string)))
;;(define-c int (history-add "linenoiseHistoryAdd") ((const string)))
;;(define-c int (history-set-max-length "linenoiseHistorySetMaxLen") (int))
;;(define-c int (history-save "linenoiseHistorySave") (string))
;;(define-c int (history-load "linenoiseHistoryLoad") (string))
;;(define-c void (read-from-terminal "linenoiseHistoryLoadClearScreen") (void))
;;(define-c void (set-multiline-term-read "linenoiseSetMultiLine") (int))

;;; Local Variables:
;;; mode: scheme
;;; outline-regexp: ";-+"
;;; comment-column:0
;;; comment-start: ";;; "
;;; comment-end:"" 
;;; End:
